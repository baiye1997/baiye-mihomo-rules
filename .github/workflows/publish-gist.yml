name: Publish Gist

on:
  # Purge CDN 成功后自动执行
  workflow_run:
    workflows: ["Purge CDN"]
    types: [completed]

  # 也支持手动触发
  workflow_dispatch: {}

concurrency:
  group: publish-gist
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  publish:
    # 仅当 Purge CDN 结论为 success，或人为手动触发时执行
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event.workflow_run.conclusion == 'success') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 运行你那份配套脚本 —— 会一次性更新两个 Gist（standard + lite）
      - name: Build & Publish to Gists (standard + lite)
        env:
          # ── 必需：用于更新 Gist 的 token 与两个 Gist 的 ID ──────────────────────────────
          GIST_TOKEN:        ${{ secrets.GIST_TOKEN }}
          GIST_ID_STANDARD:  ${{ secrets.GIST_ID_STANDARD }}   # 放 standard 三件套
          GIST_ID_LITE:      ${{ secrets.GIST_ID_LITE }}       # 放 lite 三件套

          # ── 订阅链接（脚本会把模板里的“替换订阅链接1/2”替换为这两个） ──────────────────
          SUB_URL_1:         ${{ secrets.SUB_URL_1 }}
          SUB_URL_2:         ${{ secrets.SUB_URL_2 }}

          # ── 用于给 icons 链接追加 ?v= 短哈希，强制刷新缓存（脚本内部会使用） ─────────────
          COMMIT_SHORT:      ${{ github.sha }}

          # ── 模板路径（保持与你仓库一致；脚本会基于 multiple 派生 mini） ────────────────
          CONFIG_MULTIPLE_STD:   config/baiye-multiple.yaml
          CONFIG_SINGLE_STD:     config/baiye-single.yaml
          CONFIG_MULTIPLE_LITE:  config/baiye-multiple-lite.yaml
          CONFIG_SINGLE_LITE:    config/baiye-single-lite.yaml

          # ── 目标文件名（写入到两个 Gist 中的文件名） ────────────────────────────────────
          GIST_FILE_MULTIPLE_STD:  baiye-multiple.yaml
          GIST_FILE_SINGLE_STD:    baiye-single.yaml
          GIST_FILE_MINI_STD:      baiye-mini.yaml

          GIST_FILE_MULTIPLE_LITE: baiye-multiple-lite.yaml
          GIST_FILE_SINGLE_LITE:   baiye-single-lite.yaml
          GIST_FILE_MINI_LITE:     baiye-mini-lite.yaml

          # ── 可选：控制脚本行为（保留默认即可） ──────────────────────────────────────────
          DRY_RUN:    "false"          # 设为 "true" 可试跑但不提交
          QUIET:      "true"           # 精简日志
          STATUS_FILE: status-publish.txt
        run: |
          set -euo pipefail
          node .github/scripts/build-and-publish-gists.js

      - name: Show status file (optional)
        if: always()
        run: |
          test -f status-publish.txt && echo "Status: $(cat status-publish.txt)" || echo "No status file"
