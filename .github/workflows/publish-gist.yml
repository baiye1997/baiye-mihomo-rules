name: Publish Gists

on:
  push:
    branches: ['**']
    tags-ignore: ['**']     # 忽略 tag push
    paths:
      - 'icons/**'
      - 'rules/**'
      - 'config/baiye-multiple.yaml'
      - 'config/baiye-single.yaml'
      - 'config/baiye-multiple-lite.yaml'
      - 'config/baiye-single-lite.yaml'
  workflow_dispatch:
    inputs:
      force_full:
        description: 'Run full publish: update all variants regardless of changes'
        type: boolean
        default: false

concurrency:
  group: build-and-publish
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    if: ${{ github.event_name != 'push' || startsWith(github.ref, 'refs/heads/') }}
    runs-on: ubuntu-latest
    env:
      FORCE_FULL: ${{ inputs.force_full && 'true' || 'false' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          # 手动触发时，如 ref 指向 tag，则强制回落到 main 防止检出 tag
          ref: ${{ startsWith(github.ref, 'refs/tags/') && 'main' || github.ref }}

      - name: Detect changed files (safe on tag/initial)
        id: chg
        shell: bash
        run: |
          set -euo pipefail

          # 若为 tag（理论上已被上层拦截），再保险：直接空变更退出
          if [ "${{ github.ref_type }}" = "tag" ] || [[ "${GITHUB_REF:-}" == refs/tags/* ]]; then
            : > changed.all.txt
            : > changed.targets.txt
            echo "multi_changed=false"             >> $GITHUB_OUTPUT
            echo "single_changed=false"            >> $GITHUB_OUTPUT
            echo "multi_lite_changed=false"        >> $GITHUB_OUTPUT
            echo "single_lite_changed=false"       >> $GITHUB_OUTPUT
            echo "No-op on tag ref."
            exit 0
          fi

          AFTER="${{ github.sha }}"
          BEFORE="${{ github.event.before }}"
          if [ -z "${BEFORE}" ]; then
            BEFORE="$(git rev-parse "${AFTER}^" 2>/dev/null || echo '')"
          fi

          if [ -n "${BEFORE}" ]; then
            git diff --name-only "${BEFORE}" "${AFTER}" | sort -u > changed.all.txt
          else
            # 没有基线时，判定为无变更（防止把全仓当变更）
            : > changed.all.txt
          fi

          if [ ! -s changed.all.txt ]; then
            : > changed.targets.txt
            echo "multi_changed=false"             >> $GITHUB_OUTPUT
            echo "single_changed=false"            >> $GITHUB_OUTPUT
            echo "multi_lite_changed=false"        >> $GITHUB_OUTPUT
            echo "single_lite_changed=false"       >> $GITHUB_OUTPUT
            echo "No file changes; skip."
            exit 0
          fi

          grep -E '^(icons/|rules/)' changed.all.txt | sort -u > changed.targets.txt || true

          MULTI_CHANGED=false
          SINGLE_CHANGED=false
          MULTI_LITE_CHANGED=false
          SINGLE_LITE_CHANGED=false
          grep -qx "config/baiye-multiple.yaml"       changed.all.txt && MULTI_CHANGED=true
          grep -qx "config/baiye-single.yaml"         changed.all.txt && SINGLE_CHANGED=true
          grep -qx "config/baiye-multiple-lite.yaml"  changed.all.txt && MULTI_LITE_CHANGED=true
          grep -qx "config/baiye-single-lite.yaml"    changed.all.txt && SINGLE_LITE_CHANGED=true

          echo "multi_changed=${MULTI_CHANGED}"             >> $GITHUB_OUTPUT
          echo "single_changed=${SINGLE_CHANGED}"           >> $GITHUB_OUTPUT
          echo "multi_lite_changed=${MULTI_LITE_CHANGED}"   >> $GITHUB_OUTPUT
          echo "single_lite_changed=${SINGLE_LITE_CHANGED}" >> $GITHUB_OUTPUT

          echo "Changed files:" && cat changed.all.txt || true
          echo "Changed targets (icons/rules):" && cat changed.targets.txt || true

      - name: Decide need (multiple)
        id: need_multi
        shell: bash
        run: |
          set -euo pipefail
          NEED=false
          if [ "${FORCE_FULL}" = "true" ]; then
            NEED=true
          elif [ "${{ steps.chg.outputs.multi_changed }}" = "true" ]; then
            NEED=true
          elif [ -s changed.targets.txt ] && [ -f config/baiye-multiple.yaml ]; then
            while IFS= read -r p; do
              [ -z "$p" ] && continue
              if grep -Fq "$p" config/baiye-multiple.yaml; then NEED=true; break; fi
            done < changed.targets.txt
          fi
          echo "need=${NEED}" >> $GITHUB_OUTPUT
          echo "need-multiple=${NEED}"

      - name: Decide need (single)
        id: need_single
        shell: bash
        run: |
          set -euo pipefail
          NEED=false
          if [ "${FORCE_FULL}" = "true" ]; then
            NEED=true
          elif [ "${{ steps.chg.outputs.single_changed }}" = "true" ]; then
            NEED=true
          elif [ -s changed.targets.txt ] && [ -f config/baiye-single.yaml ]; then
            while IFS= read -r p; do
              [ -z "$p" ] && continue
              if grep -Fq "$p" config/baiye-single.yaml; then NEED=true; break; fi
            done < changed.targets.txt
          fi
          echo "need=${NEED}" >> $GITHUB_OUTPUT
          echo "need-single=${NEED}"

      - name: Decide need (multiple-lite)
        id: need_multi_lite
        shell: bash
        run: |
          set -euo pipefail
          NEED=false
          if [ "${FORCE_FULL}" = "true" ]; then
            NEED=true
          elif [ "${{ steps.chg.outputs.multi_lite_changed }}" = "true" ]; then
            NEED=true
          elif [ -s changed.targets.txt ] && [ -f config/baiye-multiple-lite.yaml ]; then
            while IFS= read -r p; do
              [ -z "$p" ] && continue
              if grep -Fq "$p" config/baiye-multiple-lite.yaml; then NEED=true; break; fi
            done < changed.targets.txt
          fi
          echo "need=${NEED}" >> $GITHUB_OUTPUT
          echo "need-multiple-lite=${NEED}"

      - name: Decide need (single-lite)
        id: need_single_lite
        shell: bash
        run: |
          set -euo pipefail
          NEED=false
          if [ "${FORCE_FULL}" = "true" ]; then
            NEED=true
          elif [ "${{ steps.chg.outputs.single_lite_changed }}" = "true" ]; then
            NEED=true
          elif [ -s changed.targets.txt ] && [ -f config/baiye-single-lite.yaml ]; then
            while IFS= read -r p; do
              [ -z "$p" ] && continue
              if grep -Fq "$p" config/baiye-single-lite.yaml; then NEED=true; break; fi
            done < changed.targets.txt
          fi
          echo "need=${NEED}" >> $GITHUB_OUTPUT
          echo "need-single-lite=${NEED}"

      - name: Setup Node
        if: |
          steps.need_multi.outputs.need == 'true' ||
          steps.need_single.outputs.need == 'true' ||
          steps.need_multi_lite.outputs.need == 'true' ||
          steps.need_single_lite.outputs.need == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Build & Publish (multiple + mini)
        if: steps.need_multi.outputs.need == 'true'
        env:
          SUB_URL_1: ${{ secrets.SUB_URL_1 }}
          SUB_URL_2: ${{ secrets.SUB_URL_2 }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID_STANDARD }}
          CONFIG_PATH: config/baiye-multiple.yaml
          GIST_FILE_MULTIPLE: baiye-multiple.yaml
          GIST_FILE_MINI: baiye-mini.yaml
          COMMIT_SHORT: ${{ github.sha }}
        run: |
          export COMMIT_SHORT="${COMMIT_SHORT:0:7}"
          node .github/scripts/build-multi.js

      - name: Build & Publish (single)
        if: steps.need_single.outputs.need == 'true'
        env:
          SUB_URL_1: ${{ secrets.SUB_URL_1 }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID_STANDARD }}
          CONFIG_PATH: config/baiye-single.yaml
          GIST_FILE_SINGLE: baiye-single.yaml
          COMMIT_SHORT: ${{ github.sha }}
        run: |
          export COMMIT_SHORT="${COMMIT_SHORT:0:7}"
          node .github/scripts/build-single.js

      - name: Build & Publish (multiple-lite + mini-lite)
        if: steps.need_multi_lite.outputs.need == 'true'
        env:
          SUB_URL_1: ${{ secrets.SUB_URL_1 }}
          SUB_URL_2: ${{ secrets.SUB_URL_2 }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID_LITE }}
          CONFIG_PATH: config/baiye-multiple-lite.yaml
          GIST_FILE_MULTIPLE: baiye-multiple-lite.yaml
          GIST_FILE_MINI: baiye-mini-lite.yaml
          COMMIT_SHORT: ${{ github.sha }}
        run: |
          export COMMIT_SHORT="${COMMIT_SHORT:0:7}"
          node .github/scripts/build-multi.js

      - name: Build & Publish (single-lite)
        if: steps.need_single_lite.outputs.need == 'true'
        env:
          SUB_URL_1: ${{ secrets.SUB_URL_1 }}
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID_LITE }}
          CONFIG_PATH: config/baiye-single-lite.yaml
          GIST_FILE_SINGLE: baiye-single-lite.yaml
          COMMIT_SHORT: ${{ github.sha }}
        run: |
          export COMMIT_SHORT="${COMMIT_SHORT:0:7}"
          node .github/scripts/build-single.js

      - name: Upload artifacts (optional)
        if: |
          steps.need_multi.outputs.need == 'true' ||
          steps.need_single.outputs.need == 'true' ||
          steps.need_multi_lite.outputs.need == 'true' ||
          steps.need_single_lite.outputs.need == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: built-configs
          path: |
            baiye-multiple.generated.yaml
            baiye-mini.generated.yaml
            baiye-single.generated.yaml
            baiye-multiple-lite.generated.yaml
            baiye-mini-lite.generated.yaml
            baiye-single-lite.generated.yaml
