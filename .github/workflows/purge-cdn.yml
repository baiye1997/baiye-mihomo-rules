name: Purge CDN

on:
  push:
    paths:
      - "rules/ip/**"
      - "rules/non_ip/**"
      - "rules/domainset/**"
      - "rules/yaml/**"
      - "icons/**"
      - "config/*.yaml"
      - "config/*.yml"
  workflow_dispatch: {}

concurrency:
  group: release-and-purge
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  release_purge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed files & map to referenced targets
        id: detect
        shell: bash
        run: |
          set -euo pipefail

          # 1) 算出对比基线（上一个提交）
          BEFORE="${{ github.event.before }}"
          if [ -z "${BEFORE}" ]; then
            BEFORE="$(git rev-parse HEAD^ || echo '')"
          fi

          # 2) 列出这次 push 变动的所有文件
          if [ -n "${BEFORE}" ]; then
            git diff --name-only "${BEFORE}" "${{ github.sha }}" > changed.all.txt
          else
            git show --name-only --pretty="" "${{ github.sha }}" > changed.all.txt
          fi

          # 3) 只保留 icons/** 和 rules/** 的目标
          grep -E '^(icons/|rules/(ip|non_ip|domainset|yaml)/)' changed.all.txt | sort -u > changed.targets.txt || true

          # 4) 如果没有目标，提前退出
          if [ ! -s changed.targets.txt ]; then
            echo "has_ref=false" >> "$GITHUB_OUTPUT"
            echo "No icons/rules changed."
            exit 0
          fi

          # 5) 仅当这些目标被 config/*.yml(yaml) 引用时才认为需要 Purge
          shopt -s nullglob
          CONFIGS=(config/*.yml config/*.yaml)
          : > referenced.targets.txt
          if [ ${#CONFIGS[@]} -eq 0 ]; then
            echo "has_ref=false" >> "$GITHUB_OUTPUT"
            echo "No config YAML files exist; skip."
            exit 0
          fi

          while read -r P; do
            [ -n "$P" ] || continue
            # 只匹配相对路径片段（例如 "icons/xxx.png" 或 "rules/non_ip/xxx.txt"）
            if grep -RqlF -- "$P" "${CONFIGS[@]}"; then
              echo "$P" >> referenced.targets.txt
            fi
          done < changed.targets.txt

          if [ ! -s referenced.targets.txt ]; then
            echo "has_ref=false" >> "$GITHUB_OUTPUT"
            echo "Changed icons/rules are NOT referenced in config; skip."
            exit 0
          fi

          echo "has_ref=true" >> "$GITHUB_OUTPUT"
          echo "Referenced targets:"
          cat referenced.targets.txt

      - name: Purge jsDelivr for referenced targets (@latest + @main)
        if: steps.detect.outputs.has_ref == 'true'
        shell: bash
        run: |
          set -euo pipefail
          REPO="${{ github.repository }}"
          while read -r p; do
            [ -n "$p" ] || continue
            for REF in latest main; do
              URL="https://purge.jsdelivr.net/gh/${REPO}@${REF}/${p}"
              echo "Purging $URL"
              curl -fsS "$URL" >/dev/null || true
            done
          done < referenced.targets.txt
