name: Purge CDN

on:
  push:
    branches: ['**']
    tags-ignore: ['**']   # 忽略 tag push，避免 Release 触发
    paths:
      - "rules/ip/**"
      - "rules/non_ip/**"
      - "rules/domainset/**"
      - "rules/yaml/**"
      - "icons/**"
      - "config/*.yaml"
      - "config/*.yml"
  workflow_dispatch: {}

concurrency:
  group: release-and-purge
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  release_purge:
    if: ${{ github.event_name != 'push' || startsWith(github.ref, 'refs/heads/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ startsWith(github.ref, 'refs/tags/') && 'main' || github.ref }}

      - name: Detect changed files & map to referenced targets (safe)
        id: detect
        shell: bash
        run: |
          set -euo pipefail

          # tag 再保险：直接早退
          if [ "${{ github.ref_type }}" = "tag" ] || [[ "${GITHUB_REF:-}" == refs/tags/* ]]; then
            echo "has_ref=false" >> "$GITHUB_OUTPUT"
            echo "Skip on tag ref: ${GITHUB_REF}"
            exit 0
          fi

          BEFORE="${{ github.event.before }}"
          if [ -z "${BEFORE}" ]; then
            BEFORE="$(git rev-parse HEAD^ 2>/dev/null || echo '')"
          fi

          if [ -n "${BEFORE}" ]; then
            git diff --name-only "${BEFORE}" "${{ github.sha }}" | sort -u > changed.all.txt
          else
            : > changed.all.txt
          fi

          if [ ! -s changed.all.txt ]; then
            echo "has_ref=false" >> "$GITHUB_OUTPUT"
            echo "No file changes; skip."
            exit 0
          fi

          grep -E '^(icons/|rules/(ip|non_ip|domainset|yaml)/)' changed.all.txt | sort -u > changed.targets.txt || true

          if [ ! -s changed.targets.txt ]; then
            echo "has_ref=false" >> "$GITHUB_OUTPUT"
            echo "No icons/rules changed."
            exit 0
          fi

          shopt -s nullglob
          CONFIGS=(config/*.yml config/*.yaml)
          : > referenced.targets.txt
          if [ ${#CONFIGS[@]} -eq 0 ]; then
            echo "has_ref=false" >> "$GITHUB_OUTPUT"
            echo "No config YAML files exist; skip."
            exit 0
          fi

          while read -r P; do
            [ -n "$P" ] || continue
            if grep -RqlF -- "$P" "${CONFIGS[@]}"; then
              echo "$P" >> referenced.targets.txt
            fi
          done < changed.targets.txt

          if [ ! -s referenced.targets.txt ]; then
            echo "has_ref=false" >> "$GITHUB_OUTPUT"
            echo "Changed icons/rules are NOT referenced in config; skip."
            exit 0
          fi

          echo "has_ref=true" >> "$GITHUB_OUTPUT"
          echo "Referenced targets:"
          cat referenced.targets.txt

      - name: Purge jsDelivr for referenced targets (@latest + @main)
        if: steps.detect.outputs.has_ref == 'true'
        shell: bash
        run: |
          set -euo pipefail
          REPO="${{ github.repository }}"
          while read -r p; do
            [ -n "$p" ] || continue
            for REF in latest main; do
              URL="https://purge.jsdelivr.net/gh/${REPO}@${REF}/${p}"
              echo "Purging $URL"
              curl -fsS "$URL" >/dev/null || true
            done
          done < referenced.targets.txt
